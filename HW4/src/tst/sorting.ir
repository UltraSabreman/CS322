# IR1 Program

_selectionSort (A, count)
(temp, i, j, k)
{
 t1 = count - 1
 i = t1
L0:
 t2 = i >= 0
 if t2 == false goto L1
 j = 0
 k = 0
L2:
 t3 = j <= i
 if t3 == false goto L3
 t4 = j * 4
 t5 = A + t4
 t6 = [t5]
 t7 = k * 4
 t8 = A + t7
 t9 = [t8]
 t10 = t6 > t9
 if t10 == false goto L4
 k = j
L4:
 t11 = j + 1
 j = t11
 goto L2
L3:
 t12 = k != i
 if t12 == false goto L5
 t13 = k * 4
 t14 = A + t13
 t15 = [t14]
 temp = t15
 t16 = i * 4
 t17 = A + t16
 t18 = [t17]
 t19 = k * 4
 t20 = A + t19
 [t20] = t18
 t21 = i * 4
 t22 = A + t21
 [t22] = temp
L5:
 t23 = i - 1
 i = t23
 goto L0
L1:
 return 
}

_main ()
(numbers, cnt)
{
 t24 = call _malloc(40)
 numbers = t24
 cnt = 0
L6:
 t25 = cnt < 10
 if t25 == false goto L7
 t26 = 10 - cnt
 t27 = cnt * 4
 t28 = numbers + t27
 [t28] = t26
 t29 = cnt + 1
 cnt = t29
 goto L6
L7:
 call _selectionSort(numbers, cnt)
 call _printStr("Your numbers in sorted order are:")
 cnt = 0
L8:
 t30 = cnt < 10
 if t30 == false goto L9
 t31 = cnt * 4
 t32 = numbers + t31
 t33 = [t32]
 call _printInt(t33)
 t34 = cnt + 1
 cnt = t34
 goto L8
L9:
 return 
}
